{"version":3,"file":"lib_index_js.298fe5545a3252ecc826.js","mappings":"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","sources":["webpack://@jupyterlab-examples/widgets/./src/index.ts"],"sourcesContent":["import {\r\n    JupyterFrontEnd,\r\n    JupyterFrontEndPlugin\r\n} from '@jupyterlab/application';\r\n\r\nimport { ICommandPalette } from '@jupyterlab/apputils';\r\nimport { ILauncher } from '@jupyterlab/launcher';\r\nimport { Widget } from '@lumino/widgets';\r\n\r\n/**\r\n * Activate the whiteboard extension.\r\n */\r\nconst extension: JupyterFrontEndPlugin<void> = {\r\n    id: '@jupyterlab-examples/whiteboard:plugin',\r\n    autoStart: true,\r\n    requires: [ICommandPalette, ILauncher],\r\n    activate: (\r\n        app: JupyterFrontEnd,\r\n        palette: ICommandPalette,\r\n        launcher: ILauncher\r\n    ) => {\r\n        const { commands, shell } = app;\r\n        const command = 'whiteboard:open';\r\n\r\n        commands.addCommand(command, {\r\n            label: 'Open Whiteboard',\r\n            caption: 'Open a whiteboard to draw on',\r\n            execute: () => {\r\n                const whiteboardWidget = new WhiteboardWidget();\r\n                shell.add(whiteboardWidget, 'main');\r\n            }\r\n        });\r\n\r\n        // Add the command to the palette\r\n        palette.addItem({ command, args: {}, category: 'Extension Examples' });\r\n\r\n        // Add the widget to the launcher\r\n        launcher.add({\r\n            command: command,\r\n            category: 'Other',\r\n            rank: 0,\r\n        });\r\n    }\r\n};\r\n\r\nexport default extension;\r\n\r\nclass WhiteboardWidget extends Widget {\r\n    private context: CanvasRenderingContext2D | null;\r\n    private isDrawing: boolean = false;\r\n    private lastX: number = 0;\r\n    private lastY: number = 0;\r\n    private eraserMode: boolean = false; // Initialize with a default value\r\n\r\n    constructor() {\r\n        super();\r\n        this.addClass('whiteboard-widget');\r\n        this.id = 'whiteboard-widget';\r\n        this.title.label = 'Whiteboard';\r\n        this.title.closable = true;\r\n\r\n        // Create a canvas element for drawing\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 1800;\r\n        canvas.height = 1000;\r\n        this.node.appendChild(canvas);\r\n\r\n        // Get the 2D rendering context of the canvas\r\n        this.context = canvas.getContext('2d');\r\n        if (this.context !== null) {\r\n            this.context.strokeStyle = 'black';\r\n            this.context.lineWidth = 2;\r\n\r\n            // Add event listeners for drawing on the canvas\r\n            canvas.addEventListener('mousedown', this.startDrawing.bind(this));\r\n            canvas.addEventListener('mousemove', this.draw.bind(this));\r\n            canvas.addEventListener('mouseup', this.stopDrawing.bind(this));\r\n            canvas.addEventListener('mouseout', this.stopDrawing.bind(this));\r\n\r\n            // Add event listener for toggling eraser mode\r\n            canvas.addEventListener('dblclick', this.toggleEraserMode.bind(this));\r\n        }\r\n    }\r\n\r\n    private startDrawing(event: MouseEvent) {\r\n        this.isDrawing = true;\r\n        [this.lastX, this.lastY] = [event.offsetX, event.offsetY];\r\n    }\r\n\r\n    private draw(event: MouseEvent) {\r\n        if (!this.isDrawing) return;\r\n        if (this.context === null) return;\r\n\r\n        if (this.eraserMode) {\r\n            this.context.clearRect(\r\n                event.offsetX - 10,\r\n                event.offsetY - 10,\r\n                20,\r\n                20\r\n            );\r\n        } else {\r\n            this.context.beginPath();\r\n            this.context.moveTo(this.lastX, this.lastY);\r\n            this.context.lineTo(event.offsetX, event.offsetY);\r\n            this.context.stroke();\r\n            [this.lastX, this.lastY] = [event.offsetX, event.offsetY];\r\n        }\r\n    }\r\n\r\n    private stopDrawing() {\r\n        this.isDrawing = false;\r\n    }\r\n\r\n    private toggleEraserMode() {\r\n        if (this.context !== null) {\r\n            this.eraserMode = !this.eraserMode;\r\n            this.context.lineCap = this.eraserMode ? 'square' : 'round';\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"],"names":[],"sourceRoot":""}